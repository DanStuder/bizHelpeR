% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/printPlot.R
\name{printPlot}
\alias{printPlot}
\title{printPlot}
\usage{
printPlot(row_id, plot_col, data)
}
\arguments{
\item{row_id}{Zeilenindex oder Name der Skala (muss in der Spalte "Skala" sein)}

\item{plot_col}{Spalte aus dem Datensatz, in dem die Plots gespeichert sind. Der Plot muss in eine Funktion gewrapped sein, damit das tibble mit \code{View(tbl)} geöffnet werden kann.}

\item{data}{Datensatz, aus dem der Plot angezeigt werden soll}
}
\value{
Plot (bzw. Funktion), der in der Zelle gespeichert war
}
\description{
Convenience-function, um die Plots aufzurufen
Per Default ist der Datensatz "norm_data" ausgewählt
Zudem die Spalte "Histo", man könnte aber auch einen anderen
Datensatz und eine andere Spalte wählen
Man kann bei row_id entweder eine Zahl eingeben (Zeile)
oder das Konstrukt, das man ansehen will
}
\examples{
library(ggplot2)

norm_data <- data.frame(
  Skala = c("A", "B"),
  Q1 = c(4, 6),
  Q2 = c(5, 7),
  Q3 = c(6, 8)
) |>
  dplyr::mutate(
    RW = purrr::map(Skala, ~ if (.x == "A") rnorm(30, mean = 5) else rnorm(30, mean = 7)),
    Histo = purrr::pmap(
      .l = list(Skala = Skala, RW = RW, Q1 = Q1, Q2 = Q2, Q3 = Q3),
      .f = function(Skala, RW, Q1, Q2, Q3) {

      # WICHTIG: innerhalb der Funktion .f den ggplot nochmals in eine function`()` wrappen!
        function() {
        ggplot(data.frame(RW = RW), aes(x = RW)) +
          geom_histogram(bins = 10) +
          geom_vline(xintercept = Q1, color = "red", linetype = "dashed") +
          geom_vline(xintercept = Q2, color = "blue", linetype = "dotted") +
          geom_vline(xintercept = Q3, color = "red", linetype = "dashed") +
          ggtitle(Skala)
        }
      }
    )
  )

# Beispiel: Plot anzeigen mit Zeilenindex
printPlot(1, "Histo", norm_data)

# Beispiel: Plot anzeigen mit Skalennamen
printPlot("B", "Histo", norm_data)
}
